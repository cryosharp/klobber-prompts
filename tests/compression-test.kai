<klobber>
<promptMeta>
{
  "useAgentMode": true,
  "agentTaskToken": "<go/>",
  "useCompression": true,
  "useSystemMessages": true,
  "maxLoopLeakIterations": 3,
  "maxPromptIterations": 50,
  "maxPhraseRepetition": 70
}
</promptMeta>
<promptText>

# Delete directory

Delete directory: /opt/cryosharp/klobber

<go/>

# Install git

Install git using aptitude.

<go/>

# Install git ssh key

Write the ssh-key to file: `/opt/cryosharp/klobber/.ssh/.git-private-key`

```
{{SECRET_GITHUB_SSH_PRIVATE_KEY}}
```

- Ensure the directory exists.
- Protect it for the current user.
- Verify the integrity of the key.

<go/>

# Install git ssh wrapper

Write the following bash script to file: `/opt/cryosharp/klobber/bin/git-ssh.sh`

```
exec ssh -i /opt/cryosharp/klobber/.ssh/.git-private-key -o StrictHostKeyChecking=no "$@" 
```

- Ensure the directory exists.
- Give it execute permissions for the current user. 

<go/>

# Install git ssh environment

Append to environment file: `/opt/cryosharp/klobber/etc/environment`

```
export GIT_SSH='/opt/cryosharp/klobber/bin/git-ssh.sh'
```

- Ensure the directory exists.
- Ensure there are no duplicates.
- Protect it for the current user.

<go/>

# Test git clone

Source environment file: `/opt/cryosharp/klobber/etc/environment`

- Recreate the directory: `/opt/cryosharp/klobber/git/`.
- Clone: `git@github.com:cryosharp/klobber-prompts.git` into `/opt/cryosharp/klobber/git/`.

<go/>

# Ownership

Target directory: `/opt/cryosharp/klobber`

- Change the ownership recursively to $USER.

<go/>

# Install kubectl

Download the kubectl binary using the script below:

```
curl -L -o /opt/cryosharp/klobber/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
```

- Ensure the directory exists.
- Protect it for the current user.
- Make it executable.
- Create a symbolic link in /usr/bin.

<go/>

# Install Kubernetes CA certificate

Write the certificate below to file: `/opt/cryosharp/klobber/certs/ca.crt`

```
{{SECRET_KUBERNETES_CA_CERTIFICATE}}
```

- Ensure the directory exists.
- Protect it for the current user.

<go/>

# Install Kubernetes client certificate

Write the certificate below to file: `/opt/cryosharp/klobber/certs/client.crt`

```
{{SECRET_KUBERNETES_CLIENT_CERTIFICATE}}
```

- Ensure the directory exists.
- Protect it for the current user.

<go/>

# Install Kubernetes client key

Write the certificate below to file: `/opt/cryosharp/klobber/certs/client.key`

```
{{SECRET_KUBERNETES_CLIENT_KEY}}
```

- Ensure the directory exists.
- Protect it for the current user.

<go/>

# Install Kubernetes config

Write the config below to file: `/opt/cryosharp/klobber/.kube/config`

```
{{SECRET_KUBERNETES_CONFIG}}
```

- Ensure the directory exists.
- Protect it for the current user.

<go/>

# Install kubectl environment

Append to environment file: `/opt/cryosharp/klobber/etc/environment`

```
export KUBECONFIG='/opt/cryosharp/klobber/.kube/config'
```

- Ensure the directory exists.
- Ensure there are no duplicates.
- Protect it for the current user.

<go/>

# Test kubectl connectivity

Source environment file: `/opt/cryosharp/klobber/etc/environment`

- List all namespaces.

<go/>

# Ownership

Target directory: `/opt/cryosharp/klobber`

- Change the ownership recursively to $USER.

</promptText>
</klobber>
